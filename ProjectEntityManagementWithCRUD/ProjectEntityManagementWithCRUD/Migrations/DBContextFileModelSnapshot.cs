// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectEntityManagementWithCRUD.DBcontext;

#nullable disable

namespace ProjectEntityManagementWithCRUD.Migrations
{
    [DbContext(typeof(DBContextFile))]
    partial class DBContextFileModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("CategoryCount")
                        .HasColumnType("int");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("OrderDateTime")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.Property<string>("orderCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Products", b =>
                {
                    b.Property<Guid>("ProductCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCode");

                    b.HasIndex("CategoriesCategoryId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MobileNumber")
                        .HasColumnType("number(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Categories", b =>
                {
                    b.HasOne("ProjectEntityManagementWithCRUD.Models.Users", null)
                        .WithMany("Categories")
                        .HasForeignKey("UsersUserId");
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Orders", b =>
                {
                    b.HasOne("ProjectEntityManagementWithCRUD.Models.Users", null)
                        .WithMany("Orders")
                        .HasForeignKey("UsersUserId");
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Products", b =>
                {
                    b.HasOne("ProjectEntityManagementWithCRUD.Models.Categories", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoriesCategoryId");
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjectEntityManagementWithCRUD.Models.Users", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
